# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AffectedRowsOutput {
  count: Int!
}

type AggregateConditionalTarget {
  _count: ConditionalTargetCountAggregate
  _max: ConditionalTargetMaxAggregate
  _min: ConditionalTargetMinAggregate
}

type AggregateContext {
  _count: ContextCountAggregate
  _max: ContextMaxAggregate
  _min: ContextMinAggregate
}

type AggregateContextMapping {
  _avg: ContextMappingAvgAggregate
  _count: ContextMappingCountAggregate
  _max: ContextMappingMaxAggregate
  _min: ContextMappingMinAggregate
  _sum: ContextMappingSumAggregate
}

type AggregateUser {
  _count: UserCountAggregate
  _max: UserMaxAggregate
  _min: UserMinAggregate
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

type ConditionalTarget {
  conditionalContext: Context!
  conditionalContextId: String!
  createdAt: DateTimeISO!
  id: String!
  targetContext: Context!
  targetContextId: String!
  updatedAt: DateTimeISO!
}

input ConditionalTargetConditionalContextIdTargetContextIdCompoundUniqueInput {
  conditionalContextId: String!
  targetContextId: String!
}

type ConditionalTargetCountAggregate {
  _all: Int!
  conditionalContextId: Int!
  createdAt: Int!
  id: Int!
  targetContextId: Int!
  updatedAt: Int!
}

input ConditionalTargetCountOrderByAggregateInput {
  conditionalContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  targetContextId: SortOrder
  updatedAt: SortOrder
}

input ConditionalTargetCreateInput {
  conditionalContext: ContextCreateNestedOneWithoutConditionalTargetsInput!
  createdAt: DateTimeISO
  id: String
  targetContext: ContextCreateNestedOneWithoutTargetInConditionalInput!
  updatedAt: DateTimeISO
}

input ConditionalTargetCreateManyConditionalContextInput {
  createdAt: DateTimeISO
  id: String
  targetContextId: String!
  updatedAt: DateTimeISO
}

input ConditionalTargetCreateManyConditionalContextInputEnvelope {
  data: [ConditionalTargetCreateManyConditionalContextInput!]!
  skipDuplicates: Boolean
}

input ConditionalTargetCreateManyInput {
  conditionalContextId: String!
  createdAt: DateTimeISO
  id: String
  targetContextId: String!
  updatedAt: DateTimeISO
}

input ConditionalTargetCreateManyTargetContextInput {
  conditionalContextId: String!
  createdAt: DateTimeISO
  id: String
  updatedAt: DateTimeISO
}

input ConditionalTargetCreateManyTargetContextInputEnvelope {
  data: [ConditionalTargetCreateManyTargetContextInput!]!
  skipDuplicates: Boolean
}

input ConditionalTargetCreateNestedManyWithoutConditionalContextInput {
  connect: [ConditionalTargetWhereUniqueInput!]
  connectOrCreate: [ConditionalTargetCreateOrConnectWithoutConditionalContextInput!]
  create: [ConditionalTargetCreateWithoutConditionalContextInput!]
  createMany: ConditionalTargetCreateManyConditionalContextInputEnvelope
}

input ConditionalTargetCreateNestedManyWithoutTargetContextInput {
  connect: [ConditionalTargetWhereUniqueInput!]
  connectOrCreate: [ConditionalTargetCreateOrConnectWithoutTargetContextInput!]
  create: [ConditionalTargetCreateWithoutTargetContextInput!]
  createMany: ConditionalTargetCreateManyTargetContextInputEnvelope
}

input ConditionalTargetCreateOrConnectWithoutConditionalContextInput {
  create: ConditionalTargetCreateWithoutConditionalContextInput!
  where: ConditionalTargetWhereUniqueInput!
}

input ConditionalTargetCreateOrConnectWithoutTargetContextInput {
  create: ConditionalTargetCreateWithoutTargetContextInput!
  where: ConditionalTargetWhereUniqueInput!
}

input ConditionalTargetCreateWithoutConditionalContextInput {
  createdAt: DateTimeISO
  id: String
  targetContext: ContextCreateNestedOneWithoutTargetInConditionalInput!
  updatedAt: DateTimeISO
}

input ConditionalTargetCreateWithoutTargetContextInput {
  conditionalContext: ContextCreateNestedOneWithoutConditionalTargetsInput!
  createdAt: DateTimeISO
  id: String
  updatedAt: DateTimeISO
}

type ConditionalTargetGroupBy {
  _count: ConditionalTargetCountAggregate
  _max: ConditionalTargetMaxAggregate
  _min: ConditionalTargetMinAggregate
  conditionalContextId: String!
  createdAt: DateTimeISO!
  id: String!
  targetContextId: String!
  updatedAt: DateTimeISO!
}

input ConditionalTargetListRelationFilter {
  every: ConditionalTargetWhereInput
  none: ConditionalTargetWhereInput
  some: ConditionalTargetWhereInput
}

type ConditionalTargetMaxAggregate {
  conditionalContextId: String
  createdAt: DateTimeISO
  id: String
  targetContextId: String
  updatedAt: DateTimeISO
}

input ConditionalTargetMaxOrderByAggregateInput {
  conditionalContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  targetContextId: SortOrder
  updatedAt: SortOrder
}

type ConditionalTargetMinAggregate {
  conditionalContextId: String
  createdAt: DateTimeISO
  id: String
  targetContextId: String
  updatedAt: DateTimeISO
}

input ConditionalTargetMinOrderByAggregateInput {
  conditionalContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  targetContextId: SortOrder
  updatedAt: SortOrder
}

input ConditionalTargetOrderByRelationAggregateInput {
  _count: SortOrder
}

input ConditionalTargetOrderByWithAggregationInput {
  _count: ConditionalTargetCountOrderByAggregateInput
  _max: ConditionalTargetMaxOrderByAggregateInput
  _min: ConditionalTargetMinOrderByAggregateInput
  conditionalContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  targetContextId: SortOrder
  updatedAt: SortOrder
}

input ConditionalTargetOrderByWithRelationInput {
  conditionalContext: ContextOrderByWithRelationInput
  conditionalContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  targetContext: ContextOrderByWithRelationInput
  targetContextId: SortOrder
  updatedAt: SortOrder
}

enum ConditionalTargetScalarFieldEnum {
  conditionalContextId
  createdAt
  id
  targetContextId
  updatedAt
}

input ConditionalTargetScalarWhereInput {
  AND: [ConditionalTargetScalarWhereInput!]
  NOT: [ConditionalTargetScalarWhereInput!]
  OR: [ConditionalTargetScalarWhereInput!]
  conditionalContextId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  targetContextId: StringFilter
  updatedAt: DateTimeFilter
}

input ConditionalTargetScalarWhereWithAggregatesInput {
  AND: [ConditionalTargetScalarWhereWithAggregatesInput!]
  NOT: [ConditionalTargetScalarWhereWithAggregatesInput!]
  OR: [ConditionalTargetScalarWhereWithAggregatesInput!]
  conditionalContextId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  targetContextId: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input ConditionalTargetUpdateInput {
  conditionalContext: ContextUpdateOneRequiredWithoutConditionalTargetsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  targetContext: ContextUpdateOneRequiredWithoutTargetInConditionalNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ConditionalTargetUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ConditionalTargetUpdateManyWithWhereWithoutConditionalContextInput {
  data: ConditionalTargetUpdateManyMutationInput!
  where: ConditionalTargetScalarWhereInput!
}

input ConditionalTargetUpdateManyWithWhereWithoutTargetContextInput {
  data: ConditionalTargetUpdateManyMutationInput!
  where: ConditionalTargetScalarWhereInput!
}

input ConditionalTargetUpdateManyWithoutConditionalContextNestedInput {
  connect: [ConditionalTargetWhereUniqueInput!]
  connectOrCreate: [ConditionalTargetCreateOrConnectWithoutConditionalContextInput!]
  create: [ConditionalTargetCreateWithoutConditionalContextInput!]
  createMany: ConditionalTargetCreateManyConditionalContextInputEnvelope
  delete: [ConditionalTargetWhereUniqueInput!]
  deleteMany: [ConditionalTargetScalarWhereInput!]
  disconnect: [ConditionalTargetWhereUniqueInput!]
  set: [ConditionalTargetWhereUniqueInput!]
  update: [ConditionalTargetUpdateWithWhereUniqueWithoutConditionalContextInput!]
  updateMany: [ConditionalTargetUpdateManyWithWhereWithoutConditionalContextInput!]
  upsert: [ConditionalTargetUpsertWithWhereUniqueWithoutConditionalContextInput!]
}

input ConditionalTargetUpdateManyWithoutTargetContextNestedInput {
  connect: [ConditionalTargetWhereUniqueInput!]
  connectOrCreate: [ConditionalTargetCreateOrConnectWithoutTargetContextInput!]
  create: [ConditionalTargetCreateWithoutTargetContextInput!]
  createMany: ConditionalTargetCreateManyTargetContextInputEnvelope
  delete: [ConditionalTargetWhereUniqueInput!]
  deleteMany: [ConditionalTargetScalarWhereInput!]
  disconnect: [ConditionalTargetWhereUniqueInput!]
  set: [ConditionalTargetWhereUniqueInput!]
  update: [ConditionalTargetUpdateWithWhereUniqueWithoutTargetContextInput!]
  updateMany: [ConditionalTargetUpdateManyWithWhereWithoutTargetContextInput!]
  upsert: [ConditionalTargetUpsertWithWhereUniqueWithoutTargetContextInput!]
}

input ConditionalTargetUpdateWithWhereUniqueWithoutConditionalContextInput {
  data: ConditionalTargetUpdateWithoutConditionalContextInput!
  where: ConditionalTargetWhereUniqueInput!
}

input ConditionalTargetUpdateWithWhereUniqueWithoutTargetContextInput {
  data: ConditionalTargetUpdateWithoutTargetContextInput!
  where: ConditionalTargetWhereUniqueInput!
}

input ConditionalTargetUpdateWithoutConditionalContextInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  targetContext: ContextUpdateOneRequiredWithoutTargetInConditionalNestedInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ConditionalTargetUpdateWithoutTargetContextInput {
  conditionalContext: ContextUpdateOneRequiredWithoutConditionalTargetsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ConditionalTargetUpsertWithWhereUniqueWithoutConditionalContextInput {
  create: ConditionalTargetCreateWithoutConditionalContextInput!
  update: ConditionalTargetUpdateWithoutConditionalContextInput!
  where: ConditionalTargetWhereUniqueInput!
}

input ConditionalTargetUpsertWithWhereUniqueWithoutTargetContextInput {
  create: ConditionalTargetCreateWithoutTargetContextInput!
  update: ConditionalTargetUpdateWithoutTargetContextInput!
  where: ConditionalTargetWhereUniqueInput!
}

input ConditionalTargetWhereInput {
  AND: [ConditionalTargetWhereInput!]
  NOT: [ConditionalTargetWhereInput!]
  OR: [ConditionalTargetWhereInput!]
  conditionalContext: ContextRelationFilter
  conditionalContextId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  targetContext: ContextRelationFilter
  targetContextId: StringFilter
  updatedAt: DateTimeFilter
}

input ConditionalTargetWhereUniqueInput {
  AND: [ConditionalTargetWhereInput!]
  NOT: [ConditionalTargetWhereInput!]
  OR: [ConditionalTargetWhereInput!]
  conditionalContext: ContextRelationFilter
  conditionalContextId: StringFilter
  conditionalContextId_targetContextId: ConditionalTargetConditionalContextIdTargetContextIdCompoundUniqueInput
  createdAt: DateTimeFilter
  id: String
  targetContext: ContextRelationFilter
  targetContextId: StringFilter
  updatedAt: DateTimeFilter
}

type Context {
  _count: ContextCount
  conditionalTargets(cursor: ConditionalTargetWhereUniqueInput, distinct: [ConditionalTargetScalarFieldEnum!], orderBy: [ConditionalTargetOrderByWithRelationInput!], skip: Int, take: Int, where: ConditionalTargetWhereInput): [ConditionalTarget!]!
  containedInMappings(cursor: ContextMappingWhereUniqueInput, distinct: [ContextMappingScalarFieldEnum!], orderBy: [ContextMappingOrderByWithRelationInput!], skip: Int, take: Int, where: ContextMappingWhereInput): [ContextMapping!]!
  contextType: ContextType!
  createdAt: DateTimeISO!
  creator: User!
  creatorId: String!
  defaultForContexts(cursor: ContextWhereUniqueInput, distinct: [ContextScalarFieldEnum!], orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): [Context!]!
  defaultTarget(where: ContextWhereInput): Context
  defaultTargetId: String
  description: String
  id: String!
  mappingContexts(cursor: ContextMappingWhereUniqueInput, distinct: [ContextMappingScalarFieldEnum!], orderBy: [ContextMappingOrderByWithRelationInput!], skip: Int, take: Int, where: ContextMappingWhereInput): [ContextMapping!]!
  markdownContent: String
  precedingContext(where: ContextWhereInput): Context
  precedingContextId: String
  precedingForContexts(cursor: ContextWhereUniqueInput, distinct: [ContextScalarFieldEnum!], orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): [Context!]!
  relationshipType: RelationshipType
  slug: String!
  sourceConnections(cursor: ContextWhereUniqueInput, distinct: [ContextScalarFieldEnum!], orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): [Context!]!
  sourceContext(where: ContextWhereInput): Context
  sourceContextId: String
  targetConnections(cursor: ContextWhereUniqueInput, distinct: [ContextScalarFieldEnum!], orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): [Context!]!
  targetContext(where: ContextWhereInput): Context
  targetContextId: String
  targetInConditional(cursor: ConditionalTargetWhereUniqueInput, distinct: [ConditionalTargetScalarFieldEnum!], orderBy: [ConditionalTargetOrderByWithRelationInput!], skip: Int, take: Int, where: ConditionalTargetWhereInput): [ConditionalTarget!]!
  title: String!
  updatedAt: DateTimeISO!
}

type ContextCount {
  conditionalTargets(where: ConditionalTargetWhereInput): Int!
  containedInMappings(where: ContextMappingWhereInput): Int!
  defaultForContexts(where: ContextWhereInput): Int!
  mappingContexts(where: ContextMappingWhereInput): Int!
  precedingForContexts(where: ContextWhereInput): Int!
  sourceConnections(where: ContextWhereInput): Int!
  targetConnections(where: ContextWhereInput): Int!
  targetInConditional(where: ConditionalTargetWhereInput): Int!
}

type ContextCountAggregate {
  _all: Int!
  contextType: Int!
  createdAt: Int!
  creatorId: Int!
  defaultTargetId: Int!
  description: Int!
  id: Int!
  markdownContent: Int!
  precedingContextId: Int!
  relationshipType: Int!
  slug: Int!
  sourceContextId: Int!
  targetContextId: Int!
  title: Int!
  updatedAt: Int!
}

input ContextCountOrderByAggregateInput {
  contextType: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  defaultTargetId: SortOrder
  description: SortOrder
  id: SortOrder
  markdownContent: SortOrder
  precedingContextId: SortOrder
  relationshipType: SortOrder
  slug: SortOrder
  sourceContextId: SortOrder
  targetContextId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input ContextCreateInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateManyCreatorInput {
  contextType: ContextType
  createdAt: DateTimeISO
  defaultTargetId: String
  description: String
  id: String
  markdownContent: String
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String!
  sourceContextId: String
  targetContextId: String
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateManyCreatorInputEnvelope {
  data: [ContextCreateManyCreatorInput!]!
  skipDuplicates: Boolean
}

input ContextCreateManyDefaultTargetInput {
  contextType: ContextType
  createdAt: DateTimeISO
  creatorId: String!
  description: String
  id: String
  markdownContent: String
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String!
  sourceContextId: String
  targetContextId: String
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateManyDefaultTargetInputEnvelope {
  data: [ContextCreateManyDefaultTargetInput!]!
  skipDuplicates: Boolean
}

input ContextCreateManyInput {
  contextType: ContextType
  createdAt: DateTimeISO
  creatorId: String!
  defaultTargetId: String
  description: String
  id: String
  markdownContent: String
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String!
  sourceContextId: String
  targetContextId: String
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateManyPrecedingContextInput {
  contextType: ContextType
  createdAt: DateTimeISO
  creatorId: String!
  defaultTargetId: String
  description: String
  id: String
  markdownContent: String
  relationshipType: RelationshipType
  slug: String!
  sourceContextId: String
  targetContextId: String
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateManyPrecedingContextInputEnvelope {
  data: [ContextCreateManyPrecedingContextInput!]!
  skipDuplicates: Boolean
}

input ContextCreateManySourceContextInput {
  contextType: ContextType
  createdAt: DateTimeISO
  creatorId: String!
  defaultTargetId: String
  description: String
  id: String
  markdownContent: String
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String!
  targetContextId: String
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateManySourceContextInputEnvelope {
  data: [ContextCreateManySourceContextInput!]!
  skipDuplicates: Boolean
}

input ContextCreateManyTargetContextInput {
  contextType: ContextType
  createdAt: DateTimeISO
  creatorId: String!
  defaultTargetId: String
  description: String
  id: String
  markdownContent: String
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String!
  sourceContextId: String
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateManyTargetContextInputEnvelope {
  data: [ContextCreateManyTargetContextInput!]!
  skipDuplicates: Boolean
}

input ContextCreateNestedManyWithoutCreatorInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutCreatorInput!]
  create: [ContextCreateWithoutCreatorInput!]
  createMany: ContextCreateManyCreatorInputEnvelope
}

input ContextCreateNestedManyWithoutDefaultTargetInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutDefaultTargetInput!]
  create: [ContextCreateWithoutDefaultTargetInput!]
  createMany: ContextCreateManyDefaultTargetInputEnvelope
}

input ContextCreateNestedManyWithoutPrecedingContextInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutPrecedingContextInput!]
  create: [ContextCreateWithoutPrecedingContextInput!]
  createMany: ContextCreateManyPrecedingContextInputEnvelope
}

input ContextCreateNestedManyWithoutSourceContextInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutSourceContextInput!]
  create: [ContextCreateWithoutSourceContextInput!]
  createMany: ContextCreateManySourceContextInputEnvelope
}

input ContextCreateNestedManyWithoutTargetContextInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutTargetContextInput!]
  create: [ContextCreateWithoutTargetContextInput!]
  createMany: ContextCreateManyTargetContextInputEnvelope
}

input ContextCreateNestedOneWithoutConditionalTargetsInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutConditionalTargetsInput
  create: ContextCreateWithoutConditionalTargetsInput
}

input ContextCreateNestedOneWithoutContainedInMappingsInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutContainedInMappingsInput
  create: ContextCreateWithoutContainedInMappingsInput
}

input ContextCreateNestedOneWithoutDefaultForContextsInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutDefaultForContextsInput
  create: ContextCreateWithoutDefaultForContextsInput
}

input ContextCreateNestedOneWithoutMappingContextsInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutMappingContextsInput
  create: ContextCreateWithoutMappingContextsInput
}

input ContextCreateNestedOneWithoutPrecedingForContextsInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutPrecedingForContextsInput
  create: ContextCreateWithoutPrecedingForContextsInput
}

input ContextCreateNestedOneWithoutSourceConnectionsInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutSourceConnectionsInput
  create: ContextCreateWithoutSourceConnectionsInput
}

input ContextCreateNestedOneWithoutTargetConnectionsInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutTargetConnectionsInput
  create: ContextCreateWithoutTargetConnectionsInput
}

input ContextCreateNestedOneWithoutTargetInConditionalInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutTargetInConditionalInput
  create: ContextCreateWithoutTargetInConditionalInput
}

input ContextCreateOrConnectWithoutConditionalTargetsInput {
  create: ContextCreateWithoutConditionalTargetsInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutContainedInMappingsInput {
  create: ContextCreateWithoutContainedInMappingsInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutCreatorInput {
  create: ContextCreateWithoutCreatorInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutDefaultForContextsInput {
  create: ContextCreateWithoutDefaultForContextsInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutDefaultTargetInput {
  create: ContextCreateWithoutDefaultTargetInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutMappingContextsInput {
  create: ContextCreateWithoutMappingContextsInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutPrecedingContextInput {
  create: ContextCreateWithoutPrecedingContextInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutPrecedingForContextsInput {
  create: ContextCreateWithoutPrecedingForContextsInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutSourceConnectionsInput {
  create: ContextCreateWithoutSourceConnectionsInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutSourceContextInput {
  create: ContextCreateWithoutSourceContextInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutTargetConnectionsInput {
  create: ContextCreateWithoutTargetConnectionsInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutTargetContextInput {
  create: ContextCreateWithoutTargetContextInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateOrConnectWithoutTargetInConditionalInput {
  create: ContextCreateWithoutTargetInConditionalInput!
  where: ContextWhereUniqueInput!
}

input ContextCreateWithoutConditionalTargetsInput {
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutContainedInMappingsInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutCreatorInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutDefaultForContextsInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutDefaultTargetInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutMappingContextsInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutPrecedingContextInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutPrecedingForContextsInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutSourceConnectionsInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutSourceContextInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutTargetConnectionsInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutTargetContextInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetInConditional: ConditionalTargetCreateNestedManyWithoutTargetContextInput
  title: String!
  updatedAt: DateTimeISO
}

input ContextCreateWithoutTargetInConditionalInput {
  conditionalTargets: ConditionalTargetCreateNestedManyWithoutConditionalContextInput
  containedInMappings: ContextMappingCreateNestedManyWithoutContainedContextInput
  contextType: ContextType
  createdAt: DateTimeISO
  creator: UserCreateNestedOneWithoutCreatedContextsInput!
  defaultForContexts: ContextCreateNestedManyWithoutDefaultTargetInput
  defaultTarget: ContextCreateNestedOneWithoutDefaultForContextsInput
  description: String
  id: String
  mappingContexts: ContextMappingCreateNestedManyWithoutMappingContextInput
  markdownContent: String
  precedingContext: ContextCreateNestedOneWithoutPrecedingForContextsInput
  precedingForContexts: ContextCreateNestedManyWithoutPrecedingContextInput
  relationshipType: RelationshipType
  slug: String!
  sourceConnections: ContextCreateNestedManyWithoutSourceContextInput
  sourceContext: ContextCreateNestedOneWithoutSourceConnectionsInput
  targetConnections: ContextCreateNestedManyWithoutTargetContextInput
  targetContext: ContextCreateNestedOneWithoutTargetConnectionsInput
  title: String!
  updatedAt: DateTimeISO
}

type ContextGroupBy {
  _count: ContextCountAggregate
  _max: ContextMaxAggregate
  _min: ContextMinAggregate
  contextType: ContextType!
  createdAt: DateTimeISO!
  creatorId: String!
  defaultTargetId: String
  description: String
  id: String!
  markdownContent: String
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String!
  sourceContextId: String
  targetContextId: String
  title: String!
  updatedAt: DateTimeISO!
}

input ContextListRelationFilter {
  every: ContextWhereInput
  none: ContextWhereInput
  some: ContextWhereInput
}

type ContextMapping {
  containedContext: Context!
  containedContextId: String!
  createdAt: DateTimeISO!
  id: String!
  mappingContext: Context!
  mappingContextId: String!
  sortOrder: Int!
  updatedAt: DateTimeISO!
}

type ContextMappingAvgAggregate {
  sortOrder: Float
}

input ContextMappingAvgOrderByAggregateInput {
  sortOrder: SortOrder
}

type ContextMappingCountAggregate {
  _all: Int!
  containedContextId: Int!
  createdAt: Int!
  id: Int!
  mappingContextId: Int!
  sortOrder: Int!
  updatedAt: Int!
}

input ContextMappingCountOrderByAggregateInput {
  containedContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  mappingContextId: SortOrder
  sortOrder: SortOrder
  updatedAt: SortOrder
}

input ContextMappingCreateInput {
  containedContext: ContextCreateNestedOneWithoutContainedInMappingsInput!
  createdAt: DateTimeISO
  id: String
  mappingContext: ContextCreateNestedOneWithoutMappingContextsInput!
  sortOrder: Int!
  updatedAt: DateTimeISO
}

input ContextMappingCreateManyContainedContextInput {
  createdAt: DateTimeISO
  id: String
  mappingContextId: String!
  sortOrder: Int!
  updatedAt: DateTimeISO
}

input ContextMappingCreateManyContainedContextInputEnvelope {
  data: [ContextMappingCreateManyContainedContextInput!]!
  skipDuplicates: Boolean
}

input ContextMappingCreateManyInput {
  containedContextId: String!
  createdAt: DateTimeISO
  id: String
  mappingContextId: String!
  sortOrder: Int!
  updatedAt: DateTimeISO
}

input ContextMappingCreateManyMappingContextInput {
  containedContextId: String!
  createdAt: DateTimeISO
  id: String
  sortOrder: Int!
  updatedAt: DateTimeISO
}

input ContextMappingCreateManyMappingContextInputEnvelope {
  data: [ContextMappingCreateManyMappingContextInput!]!
  skipDuplicates: Boolean
}

input ContextMappingCreateNestedManyWithoutContainedContextInput {
  connect: [ContextMappingWhereUniqueInput!]
  connectOrCreate: [ContextMappingCreateOrConnectWithoutContainedContextInput!]
  create: [ContextMappingCreateWithoutContainedContextInput!]
  createMany: ContextMappingCreateManyContainedContextInputEnvelope
}

input ContextMappingCreateNestedManyWithoutMappingContextInput {
  connect: [ContextMappingWhereUniqueInput!]
  connectOrCreate: [ContextMappingCreateOrConnectWithoutMappingContextInput!]
  create: [ContextMappingCreateWithoutMappingContextInput!]
  createMany: ContextMappingCreateManyMappingContextInputEnvelope
}

input ContextMappingCreateOrConnectWithoutContainedContextInput {
  create: ContextMappingCreateWithoutContainedContextInput!
  where: ContextMappingWhereUniqueInput!
}

input ContextMappingCreateOrConnectWithoutMappingContextInput {
  create: ContextMappingCreateWithoutMappingContextInput!
  where: ContextMappingWhereUniqueInput!
}

input ContextMappingCreateWithoutContainedContextInput {
  createdAt: DateTimeISO
  id: String
  mappingContext: ContextCreateNestedOneWithoutMappingContextsInput!
  sortOrder: Int!
  updatedAt: DateTimeISO
}

input ContextMappingCreateWithoutMappingContextInput {
  containedContext: ContextCreateNestedOneWithoutContainedInMappingsInput!
  createdAt: DateTimeISO
  id: String
  sortOrder: Int!
  updatedAt: DateTimeISO
}

type ContextMappingGroupBy {
  _avg: ContextMappingAvgAggregate
  _count: ContextMappingCountAggregate
  _max: ContextMappingMaxAggregate
  _min: ContextMappingMinAggregate
  _sum: ContextMappingSumAggregate
  containedContextId: String!
  createdAt: DateTimeISO!
  id: String!
  mappingContextId: String!
  sortOrder: Int!
  updatedAt: DateTimeISO!
}

input ContextMappingListRelationFilter {
  every: ContextMappingWhereInput
  none: ContextMappingWhereInput
  some: ContextMappingWhereInput
}

input ContextMappingMappingContextIdContainedContextIdCompoundUniqueInput {
  containedContextId: String!
  mappingContextId: String!
}

type ContextMappingMaxAggregate {
  containedContextId: String
  createdAt: DateTimeISO
  id: String
  mappingContextId: String
  sortOrder: Int
  updatedAt: DateTimeISO
}

input ContextMappingMaxOrderByAggregateInput {
  containedContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  mappingContextId: SortOrder
  sortOrder: SortOrder
  updatedAt: SortOrder
}

type ContextMappingMinAggregate {
  containedContextId: String
  createdAt: DateTimeISO
  id: String
  mappingContextId: String
  sortOrder: Int
  updatedAt: DateTimeISO
}

input ContextMappingMinOrderByAggregateInput {
  containedContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  mappingContextId: SortOrder
  sortOrder: SortOrder
  updatedAt: SortOrder
}

input ContextMappingOrderByRelationAggregateInput {
  _count: SortOrder
}

input ContextMappingOrderByWithAggregationInput {
  _avg: ContextMappingAvgOrderByAggregateInput
  _count: ContextMappingCountOrderByAggregateInput
  _max: ContextMappingMaxOrderByAggregateInput
  _min: ContextMappingMinOrderByAggregateInput
  _sum: ContextMappingSumOrderByAggregateInput
  containedContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  mappingContextId: SortOrder
  sortOrder: SortOrder
  updatedAt: SortOrder
}

input ContextMappingOrderByWithRelationInput {
  containedContext: ContextOrderByWithRelationInput
  containedContextId: SortOrder
  createdAt: SortOrder
  id: SortOrder
  mappingContext: ContextOrderByWithRelationInput
  mappingContextId: SortOrder
  sortOrder: SortOrder
  updatedAt: SortOrder
}

enum ContextMappingScalarFieldEnum {
  containedContextId
  createdAt
  id
  mappingContextId
  sortOrder
  updatedAt
}

input ContextMappingScalarWhereInput {
  AND: [ContextMappingScalarWhereInput!]
  NOT: [ContextMappingScalarWhereInput!]
  OR: [ContextMappingScalarWhereInput!]
  containedContextId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  mappingContextId: StringFilter
  sortOrder: IntFilter
  updatedAt: DateTimeFilter
}

input ContextMappingScalarWhereWithAggregatesInput {
  AND: [ContextMappingScalarWhereWithAggregatesInput!]
  NOT: [ContextMappingScalarWhereWithAggregatesInput!]
  OR: [ContextMappingScalarWhereWithAggregatesInput!]
  containedContextId: StringWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  id: StringWithAggregatesFilter
  mappingContextId: StringWithAggregatesFilter
  sortOrder: IntWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type ContextMappingSumAggregate {
  sortOrder: Int
}

input ContextMappingSumOrderByAggregateInput {
  sortOrder: SortOrder
}

input ContextMappingUpdateInput {
  containedContext: ContextUpdateOneRequiredWithoutContainedInMappingsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContext: ContextUpdateOneRequiredWithoutMappingContextsNestedInput
  sortOrder: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextMappingUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextMappingUpdateManyWithWhereWithoutContainedContextInput {
  data: ContextMappingUpdateManyMutationInput!
  where: ContextMappingScalarWhereInput!
}

input ContextMappingUpdateManyWithWhereWithoutMappingContextInput {
  data: ContextMappingUpdateManyMutationInput!
  where: ContextMappingScalarWhereInput!
}

input ContextMappingUpdateManyWithoutContainedContextNestedInput {
  connect: [ContextMappingWhereUniqueInput!]
  connectOrCreate: [ContextMappingCreateOrConnectWithoutContainedContextInput!]
  create: [ContextMappingCreateWithoutContainedContextInput!]
  createMany: ContextMappingCreateManyContainedContextInputEnvelope
  delete: [ContextMappingWhereUniqueInput!]
  deleteMany: [ContextMappingScalarWhereInput!]
  disconnect: [ContextMappingWhereUniqueInput!]
  set: [ContextMappingWhereUniqueInput!]
  update: [ContextMappingUpdateWithWhereUniqueWithoutContainedContextInput!]
  updateMany: [ContextMappingUpdateManyWithWhereWithoutContainedContextInput!]
  upsert: [ContextMappingUpsertWithWhereUniqueWithoutContainedContextInput!]
}

input ContextMappingUpdateManyWithoutMappingContextNestedInput {
  connect: [ContextMappingWhereUniqueInput!]
  connectOrCreate: [ContextMappingCreateOrConnectWithoutMappingContextInput!]
  create: [ContextMappingCreateWithoutMappingContextInput!]
  createMany: ContextMappingCreateManyMappingContextInputEnvelope
  delete: [ContextMappingWhereUniqueInput!]
  deleteMany: [ContextMappingScalarWhereInput!]
  disconnect: [ContextMappingWhereUniqueInput!]
  set: [ContextMappingWhereUniqueInput!]
  update: [ContextMappingUpdateWithWhereUniqueWithoutMappingContextInput!]
  updateMany: [ContextMappingUpdateManyWithWhereWithoutMappingContextInput!]
  upsert: [ContextMappingUpsertWithWhereUniqueWithoutMappingContextInput!]
}

input ContextMappingUpdateWithWhereUniqueWithoutContainedContextInput {
  data: ContextMappingUpdateWithoutContainedContextInput!
  where: ContextMappingWhereUniqueInput!
}

input ContextMappingUpdateWithWhereUniqueWithoutMappingContextInput {
  data: ContextMappingUpdateWithoutMappingContextInput!
  where: ContextMappingWhereUniqueInput!
}

input ContextMappingUpdateWithoutContainedContextInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContext: ContextUpdateOneRequiredWithoutMappingContextsNestedInput
  sortOrder: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextMappingUpdateWithoutMappingContextInput {
  containedContext: ContextUpdateOneRequiredWithoutContainedInMappingsNestedInput
  createdAt: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  sortOrder: IntFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextMappingUpsertWithWhereUniqueWithoutContainedContextInput {
  create: ContextMappingCreateWithoutContainedContextInput!
  update: ContextMappingUpdateWithoutContainedContextInput!
  where: ContextMappingWhereUniqueInput!
}

input ContextMappingUpsertWithWhereUniqueWithoutMappingContextInput {
  create: ContextMappingCreateWithoutMappingContextInput!
  update: ContextMappingUpdateWithoutMappingContextInput!
  where: ContextMappingWhereUniqueInput!
}

input ContextMappingWhereInput {
  AND: [ContextMappingWhereInput!]
  NOT: [ContextMappingWhereInput!]
  OR: [ContextMappingWhereInput!]
  containedContext: ContextRelationFilter
  containedContextId: StringFilter
  createdAt: DateTimeFilter
  id: StringFilter
  mappingContext: ContextRelationFilter
  mappingContextId: StringFilter
  sortOrder: IntFilter
  updatedAt: DateTimeFilter
}

input ContextMappingWhereUniqueInput {
  AND: [ContextMappingWhereInput!]
  NOT: [ContextMappingWhereInput!]
  OR: [ContextMappingWhereInput!]
  containedContext: ContextRelationFilter
  containedContextId: StringFilter
  createdAt: DateTimeFilter
  id: String
  mappingContext: ContextRelationFilter
  mappingContextId: StringFilter
  mappingContextId_containedContextId: ContextMappingMappingContextIdContainedContextIdCompoundUniqueInput
  sortOrder: IntFilter
  updatedAt: DateTimeFilter
}

type ContextMaxAggregate {
  contextType: ContextType
  createdAt: DateTimeISO
  creatorId: String
  defaultTargetId: String
  description: String
  id: String
  markdownContent: String
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String
  sourceContextId: String
  targetContextId: String
  title: String
  updatedAt: DateTimeISO
}

input ContextMaxOrderByAggregateInput {
  contextType: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  defaultTargetId: SortOrder
  description: SortOrder
  id: SortOrder
  markdownContent: SortOrder
  precedingContextId: SortOrder
  relationshipType: SortOrder
  slug: SortOrder
  sourceContextId: SortOrder
  targetContextId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

type ContextMinAggregate {
  contextType: ContextType
  createdAt: DateTimeISO
  creatorId: String
  defaultTargetId: String
  description: String
  id: String
  markdownContent: String
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String
  sourceContextId: String
  targetContextId: String
  title: String
  updatedAt: DateTimeISO
}

input ContextMinOrderByAggregateInput {
  contextType: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  defaultTargetId: SortOrder
  description: SortOrder
  id: SortOrder
  markdownContent: SortOrder
  precedingContextId: SortOrder
  relationshipType: SortOrder
  slug: SortOrder
  sourceContextId: SortOrder
  targetContextId: SortOrder
  title: SortOrder
  updatedAt: SortOrder
}

input ContextNullableRelationFilter {
  is: ContextWhereInput
  isNot: ContextWhereInput
}

input ContextOrderByRelationAggregateInput {
  _count: SortOrder
}

input ContextOrderByWithAggregationInput {
  _count: ContextCountOrderByAggregateInput
  _max: ContextMaxOrderByAggregateInput
  _min: ContextMinOrderByAggregateInput
  contextType: SortOrder
  createdAt: SortOrder
  creatorId: SortOrder
  defaultTargetId: SortOrderInput
  description: SortOrderInput
  id: SortOrder
  markdownContent: SortOrderInput
  precedingContextId: SortOrderInput
  relationshipType: SortOrderInput
  slug: SortOrder
  sourceContextId: SortOrderInput
  targetContextId: SortOrderInput
  title: SortOrder
  updatedAt: SortOrder
}

input ContextOrderByWithRelationInput {
  conditionalTargets: ConditionalTargetOrderByRelationAggregateInput
  containedInMappings: ContextMappingOrderByRelationAggregateInput
  contextType: SortOrder
  createdAt: SortOrder
  creator: UserOrderByWithRelationInput
  creatorId: SortOrder
  defaultForContexts: ContextOrderByRelationAggregateInput
  defaultTarget: ContextOrderByWithRelationInput
  defaultTargetId: SortOrderInput
  description: SortOrderInput
  id: SortOrder
  mappingContexts: ContextMappingOrderByRelationAggregateInput
  markdownContent: SortOrderInput
  precedingContext: ContextOrderByWithRelationInput
  precedingContextId: SortOrderInput
  precedingForContexts: ContextOrderByRelationAggregateInput
  relationshipType: SortOrderInput
  slug: SortOrder
  sourceConnections: ContextOrderByRelationAggregateInput
  sourceContext: ContextOrderByWithRelationInput
  sourceContextId: SortOrderInput
  targetConnections: ContextOrderByRelationAggregateInput
  targetContext: ContextOrderByWithRelationInput
  targetContextId: SortOrderInput
  targetInConditional: ConditionalTargetOrderByRelationAggregateInput
  title: SortOrder
  updatedAt: SortOrder
}

input ContextRelationFilter {
  is: ContextWhereInput
  isNot: ContextWhereInput
}

enum ContextScalarFieldEnum {
  contextType
  createdAt
  creatorId
  defaultTargetId
  description
  id
  markdownContent
  precedingContextId
  relationshipType
  slug
  sourceContextId
  targetContextId
  title
  updatedAt
}

input ContextScalarWhereInput {
  AND: [ContextScalarWhereInput!]
  NOT: [ContextScalarWhereInput!]
  OR: [ContextScalarWhereInput!]
  contextType: EnumContextTypeFilter
  createdAt: DateTimeFilter
  creatorId: StringFilter
  defaultTargetId: StringNullableFilter
  description: StringNullableFilter
  id: StringFilter
  markdownContent: StringNullableFilter
  precedingContextId: StringNullableFilter
  relationshipType: EnumRelationshipTypeNullableFilter
  slug: StringFilter
  sourceContextId: StringNullableFilter
  targetContextId: StringNullableFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input ContextScalarWhereWithAggregatesInput {
  AND: [ContextScalarWhereWithAggregatesInput!]
  NOT: [ContextScalarWhereWithAggregatesInput!]
  OR: [ContextScalarWhereWithAggregatesInput!]
  contextType: EnumContextTypeWithAggregatesFilter
  createdAt: DateTimeWithAggregatesFilter
  creatorId: StringWithAggregatesFilter
  defaultTargetId: StringNullableWithAggregatesFilter
  description: StringNullableWithAggregatesFilter
  id: StringWithAggregatesFilter
  markdownContent: StringNullableWithAggregatesFilter
  precedingContextId: StringNullableWithAggregatesFilter
  relationshipType: EnumRelationshipTypeNullableWithAggregatesFilter
  slug: StringWithAggregatesFilter
  sourceContextId: StringNullableWithAggregatesFilter
  targetContextId: StringNullableWithAggregatesFilter
  title: StringWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

enum ContextType {
  CONDITIONAL
  MAPPING
  NODE
  RELATIONSHIP
}

input ContextUpdateInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateManyMutationInput {
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateManyWithWhereWithoutCreatorInput {
  data: ContextUpdateManyMutationInput!
  where: ContextScalarWhereInput!
}

input ContextUpdateManyWithWhereWithoutDefaultTargetInput {
  data: ContextUpdateManyMutationInput!
  where: ContextScalarWhereInput!
}

input ContextUpdateManyWithWhereWithoutPrecedingContextInput {
  data: ContextUpdateManyMutationInput!
  where: ContextScalarWhereInput!
}

input ContextUpdateManyWithWhereWithoutSourceContextInput {
  data: ContextUpdateManyMutationInput!
  where: ContextScalarWhereInput!
}

input ContextUpdateManyWithWhereWithoutTargetContextInput {
  data: ContextUpdateManyMutationInput!
  where: ContextScalarWhereInput!
}

input ContextUpdateManyWithoutCreatorNestedInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutCreatorInput!]
  create: [ContextCreateWithoutCreatorInput!]
  createMany: ContextCreateManyCreatorInputEnvelope
  delete: [ContextWhereUniqueInput!]
  deleteMany: [ContextScalarWhereInput!]
  disconnect: [ContextWhereUniqueInput!]
  set: [ContextWhereUniqueInput!]
  update: [ContextUpdateWithWhereUniqueWithoutCreatorInput!]
  updateMany: [ContextUpdateManyWithWhereWithoutCreatorInput!]
  upsert: [ContextUpsertWithWhereUniqueWithoutCreatorInput!]
}

input ContextUpdateManyWithoutDefaultTargetNestedInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutDefaultTargetInput!]
  create: [ContextCreateWithoutDefaultTargetInput!]
  createMany: ContextCreateManyDefaultTargetInputEnvelope
  delete: [ContextWhereUniqueInput!]
  deleteMany: [ContextScalarWhereInput!]
  disconnect: [ContextWhereUniqueInput!]
  set: [ContextWhereUniqueInput!]
  update: [ContextUpdateWithWhereUniqueWithoutDefaultTargetInput!]
  updateMany: [ContextUpdateManyWithWhereWithoutDefaultTargetInput!]
  upsert: [ContextUpsertWithWhereUniqueWithoutDefaultTargetInput!]
}

input ContextUpdateManyWithoutPrecedingContextNestedInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutPrecedingContextInput!]
  create: [ContextCreateWithoutPrecedingContextInput!]
  createMany: ContextCreateManyPrecedingContextInputEnvelope
  delete: [ContextWhereUniqueInput!]
  deleteMany: [ContextScalarWhereInput!]
  disconnect: [ContextWhereUniqueInput!]
  set: [ContextWhereUniqueInput!]
  update: [ContextUpdateWithWhereUniqueWithoutPrecedingContextInput!]
  updateMany: [ContextUpdateManyWithWhereWithoutPrecedingContextInput!]
  upsert: [ContextUpsertWithWhereUniqueWithoutPrecedingContextInput!]
}

input ContextUpdateManyWithoutSourceContextNestedInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutSourceContextInput!]
  create: [ContextCreateWithoutSourceContextInput!]
  createMany: ContextCreateManySourceContextInputEnvelope
  delete: [ContextWhereUniqueInput!]
  deleteMany: [ContextScalarWhereInput!]
  disconnect: [ContextWhereUniqueInput!]
  set: [ContextWhereUniqueInput!]
  update: [ContextUpdateWithWhereUniqueWithoutSourceContextInput!]
  updateMany: [ContextUpdateManyWithWhereWithoutSourceContextInput!]
  upsert: [ContextUpsertWithWhereUniqueWithoutSourceContextInput!]
}

input ContextUpdateManyWithoutTargetContextNestedInput {
  connect: [ContextWhereUniqueInput!]
  connectOrCreate: [ContextCreateOrConnectWithoutTargetContextInput!]
  create: [ContextCreateWithoutTargetContextInput!]
  createMany: ContextCreateManyTargetContextInputEnvelope
  delete: [ContextWhereUniqueInput!]
  deleteMany: [ContextScalarWhereInput!]
  disconnect: [ContextWhereUniqueInput!]
  set: [ContextWhereUniqueInput!]
  update: [ContextUpdateWithWhereUniqueWithoutTargetContextInput!]
  updateMany: [ContextUpdateManyWithWhereWithoutTargetContextInput!]
  upsert: [ContextUpsertWithWhereUniqueWithoutTargetContextInput!]
}

input ContextUpdateOneRequiredWithoutConditionalTargetsNestedInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutConditionalTargetsInput
  create: ContextCreateWithoutConditionalTargetsInput
  update: ContextUpdateToOneWithWhereWithoutConditionalTargetsInput
  upsert: ContextUpsertWithoutConditionalTargetsInput
}

input ContextUpdateOneRequiredWithoutContainedInMappingsNestedInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutContainedInMappingsInput
  create: ContextCreateWithoutContainedInMappingsInput
  update: ContextUpdateToOneWithWhereWithoutContainedInMappingsInput
  upsert: ContextUpsertWithoutContainedInMappingsInput
}

input ContextUpdateOneRequiredWithoutMappingContextsNestedInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutMappingContextsInput
  create: ContextCreateWithoutMappingContextsInput
  update: ContextUpdateToOneWithWhereWithoutMappingContextsInput
  upsert: ContextUpsertWithoutMappingContextsInput
}

input ContextUpdateOneRequiredWithoutTargetInConditionalNestedInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutTargetInConditionalInput
  create: ContextCreateWithoutTargetInConditionalInput
  update: ContextUpdateToOneWithWhereWithoutTargetInConditionalInput
  upsert: ContextUpsertWithoutTargetInConditionalInput
}

input ContextUpdateOneWithoutDefaultForContextsNestedInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutDefaultForContextsInput
  create: ContextCreateWithoutDefaultForContextsInput
  delete: ContextWhereInput
  disconnect: ContextWhereInput
  update: ContextUpdateToOneWithWhereWithoutDefaultForContextsInput
  upsert: ContextUpsertWithoutDefaultForContextsInput
}

input ContextUpdateOneWithoutPrecedingForContextsNestedInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutPrecedingForContextsInput
  create: ContextCreateWithoutPrecedingForContextsInput
  delete: ContextWhereInput
  disconnect: ContextWhereInput
  update: ContextUpdateToOneWithWhereWithoutPrecedingForContextsInput
  upsert: ContextUpsertWithoutPrecedingForContextsInput
}

input ContextUpdateOneWithoutSourceConnectionsNestedInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutSourceConnectionsInput
  create: ContextCreateWithoutSourceConnectionsInput
  delete: ContextWhereInput
  disconnect: ContextWhereInput
  update: ContextUpdateToOneWithWhereWithoutSourceConnectionsInput
  upsert: ContextUpsertWithoutSourceConnectionsInput
}

input ContextUpdateOneWithoutTargetConnectionsNestedInput {
  connect: ContextWhereUniqueInput
  connectOrCreate: ContextCreateOrConnectWithoutTargetConnectionsInput
  create: ContextCreateWithoutTargetConnectionsInput
  delete: ContextWhereInput
  disconnect: ContextWhereInput
  update: ContextUpdateToOneWithWhereWithoutTargetConnectionsInput
  upsert: ContextUpsertWithoutTargetConnectionsInput
}

input ContextUpdateToOneWithWhereWithoutConditionalTargetsInput {
  data: ContextUpdateWithoutConditionalTargetsInput!
  where: ContextWhereInput
}

input ContextUpdateToOneWithWhereWithoutContainedInMappingsInput {
  data: ContextUpdateWithoutContainedInMappingsInput!
  where: ContextWhereInput
}

input ContextUpdateToOneWithWhereWithoutDefaultForContextsInput {
  data: ContextUpdateWithoutDefaultForContextsInput!
  where: ContextWhereInput
}

input ContextUpdateToOneWithWhereWithoutMappingContextsInput {
  data: ContextUpdateWithoutMappingContextsInput!
  where: ContextWhereInput
}

input ContextUpdateToOneWithWhereWithoutPrecedingForContextsInput {
  data: ContextUpdateWithoutPrecedingForContextsInput!
  where: ContextWhereInput
}

input ContextUpdateToOneWithWhereWithoutSourceConnectionsInput {
  data: ContextUpdateWithoutSourceConnectionsInput!
  where: ContextWhereInput
}

input ContextUpdateToOneWithWhereWithoutTargetConnectionsInput {
  data: ContextUpdateWithoutTargetConnectionsInput!
  where: ContextWhereInput
}

input ContextUpdateToOneWithWhereWithoutTargetInConditionalInput {
  data: ContextUpdateWithoutTargetInConditionalInput!
  where: ContextWhereInput
}

input ContextUpdateWithWhereUniqueWithoutCreatorInput {
  data: ContextUpdateWithoutCreatorInput!
  where: ContextWhereUniqueInput!
}

input ContextUpdateWithWhereUniqueWithoutDefaultTargetInput {
  data: ContextUpdateWithoutDefaultTargetInput!
  where: ContextWhereUniqueInput!
}

input ContextUpdateWithWhereUniqueWithoutPrecedingContextInput {
  data: ContextUpdateWithoutPrecedingContextInput!
  where: ContextWhereUniqueInput!
}

input ContextUpdateWithWhereUniqueWithoutSourceContextInput {
  data: ContextUpdateWithoutSourceContextInput!
  where: ContextWhereUniqueInput!
}

input ContextUpdateWithWhereUniqueWithoutTargetContextInput {
  data: ContextUpdateWithoutTargetContextInput!
  where: ContextWhereUniqueInput!
}

input ContextUpdateWithoutConditionalTargetsInput {
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutContainedInMappingsInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutCreatorInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutDefaultForContextsInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutDefaultTargetInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutMappingContextsInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutPrecedingContextInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutPrecedingForContextsInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutSourceConnectionsInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutSourceContextInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutTargetConnectionsInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutTargetContextInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetInConditional: ConditionalTargetUpdateManyWithoutTargetContextNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpdateWithoutTargetInConditionalInput {
  conditionalTargets: ConditionalTargetUpdateManyWithoutConditionalContextNestedInput
  containedInMappings: ContextMappingUpdateManyWithoutContainedContextNestedInput
  contextType: EnumContextTypeFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  creator: UserUpdateOneRequiredWithoutCreatedContextsNestedInput
  defaultForContexts: ContextUpdateManyWithoutDefaultTargetNestedInput
  defaultTarget: ContextUpdateOneWithoutDefaultForContextsNestedInput
  description: NullableStringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  mappingContexts: ContextMappingUpdateManyWithoutMappingContextNestedInput
  markdownContent: NullableStringFieldUpdateOperationsInput
  precedingContext: ContextUpdateOneWithoutPrecedingForContextsNestedInput
  precedingForContexts: ContextUpdateManyWithoutPrecedingContextNestedInput
  relationshipType: NullableEnumRelationshipTypeFieldUpdateOperationsInput
  slug: StringFieldUpdateOperationsInput
  sourceConnections: ContextUpdateManyWithoutSourceContextNestedInput
  sourceContext: ContextUpdateOneWithoutSourceConnectionsNestedInput
  targetConnections: ContextUpdateManyWithoutTargetContextNestedInput
  targetContext: ContextUpdateOneWithoutTargetConnectionsNestedInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ContextUpsertWithWhereUniqueWithoutCreatorInput {
  create: ContextCreateWithoutCreatorInput!
  update: ContextUpdateWithoutCreatorInput!
  where: ContextWhereUniqueInput!
}

input ContextUpsertWithWhereUniqueWithoutDefaultTargetInput {
  create: ContextCreateWithoutDefaultTargetInput!
  update: ContextUpdateWithoutDefaultTargetInput!
  where: ContextWhereUniqueInput!
}

input ContextUpsertWithWhereUniqueWithoutPrecedingContextInput {
  create: ContextCreateWithoutPrecedingContextInput!
  update: ContextUpdateWithoutPrecedingContextInput!
  where: ContextWhereUniqueInput!
}

input ContextUpsertWithWhereUniqueWithoutSourceContextInput {
  create: ContextCreateWithoutSourceContextInput!
  update: ContextUpdateWithoutSourceContextInput!
  where: ContextWhereUniqueInput!
}

input ContextUpsertWithWhereUniqueWithoutTargetContextInput {
  create: ContextCreateWithoutTargetContextInput!
  update: ContextUpdateWithoutTargetContextInput!
  where: ContextWhereUniqueInput!
}

input ContextUpsertWithoutConditionalTargetsInput {
  create: ContextCreateWithoutConditionalTargetsInput!
  update: ContextUpdateWithoutConditionalTargetsInput!
  where: ContextWhereInput
}

input ContextUpsertWithoutContainedInMappingsInput {
  create: ContextCreateWithoutContainedInMappingsInput!
  update: ContextUpdateWithoutContainedInMappingsInput!
  where: ContextWhereInput
}

input ContextUpsertWithoutDefaultForContextsInput {
  create: ContextCreateWithoutDefaultForContextsInput!
  update: ContextUpdateWithoutDefaultForContextsInput!
  where: ContextWhereInput
}

input ContextUpsertWithoutMappingContextsInput {
  create: ContextCreateWithoutMappingContextsInput!
  update: ContextUpdateWithoutMappingContextsInput!
  where: ContextWhereInput
}

input ContextUpsertWithoutPrecedingForContextsInput {
  create: ContextCreateWithoutPrecedingForContextsInput!
  update: ContextUpdateWithoutPrecedingForContextsInput!
  where: ContextWhereInput
}

input ContextUpsertWithoutSourceConnectionsInput {
  create: ContextCreateWithoutSourceConnectionsInput!
  update: ContextUpdateWithoutSourceConnectionsInput!
  where: ContextWhereInput
}

input ContextUpsertWithoutTargetConnectionsInput {
  create: ContextCreateWithoutTargetConnectionsInput!
  update: ContextUpdateWithoutTargetConnectionsInput!
  where: ContextWhereInput
}

input ContextUpsertWithoutTargetInConditionalInput {
  create: ContextCreateWithoutTargetInConditionalInput!
  update: ContextUpdateWithoutTargetInConditionalInput!
  where: ContextWhereInput
}

input ContextWhereInput {
  AND: [ContextWhereInput!]
  NOT: [ContextWhereInput!]
  OR: [ContextWhereInput!]
  conditionalTargets: ConditionalTargetListRelationFilter
  containedInMappings: ContextMappingListRelationFilter
  contextType: EnumContextTypeFilter
  createdAt: DateTimeFilter
  creator: UserRelationFilter
  creatorId: StringFilter
  defaultForContexts: ContextListRelationFilter
  defaultTarget: ContextNullableRelationFilter
  defaultTargetId: StringNullableFilter
  description: StringNullableFilter
  id: StringFilter
  mappingContexts: ContextMappingListRelationFilter
  markdownContent: StringNullableFilter
  precedingContext: ContextNullableRelationFilter
  precedingContextId: StringNullableFilter
  precedingForContexts: ContextListRelationFilter
  relationshipType: EnumRelationshipTypeNullableFilter
  slug: StringFilter
  sourceConnections: ContextListRelationFilter
  sourceContext: ContextNullableRelationFilter
  sourceContextId: StringNullableFilter
  targetConnections: ContextListRelationFilter
  targetContext: ContextNullableRelationFilter
  targetContextId: StringNullableFilter
  targetInConditional: ConditionalTargetListRelationFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input ContextWhereUniqueInput {
  AND: [ContextWhereInput!]
  NOT: [ContextWhereInput!]
  OR: [ContextWhereInput!]
  conditionalTargets: ConditionalTargetListRelationFilter
  containedInMappings: ContextMappingListRelationFilter
  contextType: EnumContextTypeFilter
  createdAt: DateTimeFilter
  creator: UserRelationFilter
  creatorId: StringFilter
  defaultForContexts: ContextListRelationFilter
  defaultTarget: ContextNullableRelationFilter
  defaultTargetId: StringNullableFilter
  description: StringNullableFilter
  id: String
  mappingContexts: ContextMappingListRelationFilter
  markdownContent: StringNullableFilter
  precedingContext: ContextNullableRelationFilter
  precedingContextId: StringNullableFilter
  precedingForContexts: ContextListRelationFilter
  relationshipType: EnumRelationshipTypeNullableFilter
  slug: String
  sourceConnections: ContextListRelationFilter
  sourceContext: ContextNullableRelationFilter
  sourceContextId: StringNullableFilter
  targetConnections: ContextListRelationFilter
  targetContext: ContextNullableRelationFilter
  targetContextId: StringNullableFilter
  targetInConditional: ConditionalTargetListRelationFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

type CreateManyAndReturnConditionalTarget {
  conditionalContext: Context!
  conditionalContextId: String!
  createdAt: DateTimeISO!
  id: String!
  targetContext: Context!
  targetContextId: String!
  updatedAt: DateTimeISO!
}

type CreateManyAndReturnContext {
  contextType: ContextType!
  createdAt: DateTimeISO!
  creator: User!
  creatorId: String!
  defaultTarget(where: ContextWhereInput): Context
  defaultTargetId: String
  description: String
  id: String!
  markdownContent: String
  precedingContext(where: ContextWhereInput): Context
  precedingContextId: String
  relationshipType: RelationshipType
  slug: String!
  sourceContext(where: ContextWhereInput): Context
  sourceContextId: String
  targetContext(where: ContextWhereInput): Context
  targetContextId: String
  title: String!
  updatedAt: DateTimeISO!
}

type CreateManyAndReturnContextMapping {
  containedContext: Context!
  containedContextId: String!
  createdAt: DateTimeISO!
  id: String!
  mappingContext: Context!
  mappingContextId: String!
  sortOrder: Int!
  updatedAt: DateTimeISO!
}

type CreateManyAndReturnUser {
  createdAt: DateTimeISO!
  email: String!
  id: String!
  isActive: Boolean!
  name: String!
  role: UserRole!
  updatedAt: DateTimeISO!
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTimeISO
}

input DateTimeFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeFilter
  notIn: [DateTimeISO!]
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input EnumContextTypeFieldUpdateOperationsInput {
  set: ContextType
}

input EnumContextTypeFilter {
  equals: ContextType
  in: [ContextType!]
  not: NestedEnumContextTypeFilter
  notIn: [ContextType!]
}

input EnumContextTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumContextTypeFilter
  _min: NestedEnumContextTypeFilter
  equals: ContextType
  in: [ContextType!]
  not: NestedEnumContextTypeWithAggregatesFilter
  notIn: [ContextType!]
}

input EnumRelationshipTypeNullableFilter {
  equals: RelationshipType
  in: [RelationshipType!]
  not: NestedEnumRelationshipTypeNullableFilter
  notIn: [RelationshipType!]
}

input EnumRelationshipTypeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumRelationshipTypeNullableFilter
  _min: NestedEnumRelationshipTypeNullableFilter
  equals: RelationshipType
  in: [RelationshipType!]
  not: NestedEnumRelationshipTypeNullableWithAggregatesFilter
  notIn: [RelationshipType!]
}

input EnumUserRoleFieldUpdateOperationsInput {
  set: UserRole
}

input EnumUserRoleFilter {
  equals: UserRole
  in: [UserRole!]
  not: NestedEnumUserRoleFilter
  notIn: [UserRole!]
}

input EnumUserRoleWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumUserRoleFilter
  _min: NestedEnumUserRoleFilter
  equals: UserRole
  in: [UserRole!]
  not: NestedEnumUserRoleWithAggregatesFilter
  notIn: [UserRole!]
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

type Mutation {
  createManyAndReturnConditionalTarget(data: [ConditionalTargetCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnConditionalTarget!]!
  createManyAndReturnContext(data: [ContextCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnContext!]!
  createManyAndReturnContextMapping(data: [ContextMappingCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnContextMapping!]!
  createManyAndReturnUser(data: [UserCreateManyInput!]!, skipDuplicates: Boolean): [CreateManyAndReturnUser!]!
  createManyConditionalTarget(data: [ConditionalTargetCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyContext(data: [ContextCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyContextMapping(data: [ContextMappingCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createManyUser(data: [UserCreateManyInput!]!, skipDuplicates: Boolean): AffectedRowsOutput!
  createOneConditionalTarget(data: ConditionalTargetCreateInput!): ConditionalTarget!
  createOneContext(data: ContextCreateInput!): Context!
  createOneContextMapping(data: ContextMappingCreateInput!): ContextMapping!
  createOneUser(data: UserCreateInput!): User!
  deleteManyConditionalTarget(where: ConditionalTargetWhereInput): AffectedRowsOutput!
  deleteManyContext(where: ContextWhereInput): AffectedRowsOutput!
  deleteManyContextMapping(where: ContextMappingWhereInput): AffectedRowsOutput!
  deleteManyUser(where: UserWhereInput): AffectedRowsOutput!
  deleteOneConditionalTarget(where: ConditionalTargetWhereUniqueInput!): ConditionalTarget
  deleteOneContext(where: ContextWhereUniqueInput!): Context
  deleteOneContextMapping(where: ContextMappingWhereUniqueInput!): ContextMapping
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateManyConditionalTarget(data: ConditionalTargetUpdateManyMutationInput!, where: ConditionalTargetWhereInput): AffectedRowsOutput!
  updateManyContext(data: ContextUpdateManyMutationInput!, where: ContextWhereInput): AffectedRowsOutput!
  updateManyContextMapping(data: ContextMappingUpdateManyMutationInput!, where: ContextMappingWhereInput): AffectedRowsOutput!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): AffectedRowsOutput!
  updateOneConditionalTarget(data: ConditionalTargetUpdateInput!, where: ConditionalTargetWhereUniqueInput!): ConditionalTarget
  updateOneContext(data: ContextUpdateInput!, where: ContextWhereUniqueInput!): Context
  updateOneContextMapping(data: ContextMappingUpdateInput!, where: ContextMappingWhereUniqueInput!): ContextMapping
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  upsertOneConditionalTarget(create: ConditionalTargetCreateInput!, update: ConditionalTargetUpdateInput!, where: ConditionalTargetWhereUniqueInput!): ConditionalTarget!
  upsertOneContext(create: ContextCreateInput!, update: ContextUpdateInput!, where: ContextWhereUniqueInput!): Context!
  upsertOneContextMapping(create: ContextMappingCreateInput!, update: ContextMappingUpdateInput!, where: ContextMappingWhereUniqueInput!): ContextMapping!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeFilter
  notIn: [DateTimeISO!]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTimeISO
  gt: DateTimeISO
  gte: DateTimeISO
  in: [DateTimeISO!]
  lt: DateTimeISO
  lte: DateTimeISO
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTimeISO!]
}

input NestedEnumContextTypeFilter {
  equals: ContextType
  in: [ContextType!]
  not: NestedEnumContextTypeFilter
  notIn: [ContextType!]
}

input NestedEnumContextTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumContextTypeFilter
  _min: NestedEnumContextTypeFilter
  equals: ContextType
  in: [ContextType!]
  not: NestedEnumContextTypeWithAggregatesFilter
  notIn: [ContextType!]
}

input NestedEnumRelationshipTypeNullableFilter {
  equals: RelationshipType
  in: [RelationshipType!]
  not: NestedEnumRelationshipTypeNullableFilter
  notIn: [RelationshipType!]
}

input NestedEnumRelationshipTypeNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedEnumRelationshipTypeNullableFilter
  _min: NestedEnumRelationshipTypeNullableFilter
  equals: RelationshipType
  in: [RelationshipType!]
  not: NestedEnumRelationshipTypeNullableWithAggregatesFilter
  notIn: [RelationshipType!]
}

input NestedEnumUserRoleFilter {
  equals: UserRole
  in: [UserRole!]
  not: NestedEnumUserRoleFilter
  notIn: [UserRole!]
}

input NestedEnumUserRoleWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumUserRoleFilter
  _min: NestedEnumUserRoleFilter
  equals: UserRole
  in: [UserRole!]
  not: NestedEnumUserRoleWithAggregatesFilter
  notIn: [UserRole!]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float!]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float!]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input NullableEnumRelationshipTypeFieldUpdateOperationsInput {
  set: RelationshipType
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum NullsOrder {
  first
  last
}

type Query {
  aggregateConditionalTarget(cursor: ConditionalTargetWhereUniqueInput, orderBy: [ConditionalTargetOrderByWithRelationInput!], skip: Int, take: Int, where: ConditionalTargetWhereInput): AggregateConditionalTarget!
  aggregateContext(cursor: ContextWhereUniqueInput, orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): AggregateContext!
  aggregateContextMapping(cursor: ContextMappingWhereUniqueInput, orderBy: [ContextMappingOrderByWithRelationInput!], skip: Int, take: Int, where: ContextMappingWhereInput): AggregateContextMapping!
  aggregateUser(cursor: UserWhereUniqueInput, orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): AggregateUser!
  conditionalTarget(where: ConditionalTargetWhereUniqueInput!): ConditionalTarget
  conditionalTargets(cursor: ConditionalTargetWhereUniqueInput, distinct: [ConditionalTargetScalarFieldEnum!], orderBy: [ConditionalTargetOrderByWithRelationInput!], skip: Int, take: Int, where: ConditionalTargetWhereInput): [ConditionalTarget!]!
  context(where: ContextWhereUniqueInput!): Context
  contextMapping(where: ContextMappingWhereUniqueInput!): ContextMapping
  contextMappings(cursor: ContextMappingWhereUniqueInput, distinct: [ContextMappingScalarFieldEnum!], orderBy: [ContextMappingOrderByWithRelationInput!], skip: Int, take: Int, where: ContextMappingWhereInput): [ContextMapping!]!
  contexts(cursor: ContextWhereUniqueInput, distinct: [ContextScalarFieldEnum!], orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): [Context!]!
  findFirstConditionalTarget(cursor: ConditionalTargetWhereUniqueInput, distinct: [ConditionalTargetScalarFieldEnum!], orderBy: [ConditionalTargetOrderByWithRelationInput!], skip: Int, take: Int, where: ConditionalTargetWhereInput): ConditionalTarget
  findFirstConditionalTargetOrThrow(cursor: ConditionalTargetWhereUniqueInput, distinct: [ConditionalTargetScalarFieldEnum!], orderBy: [ConditionalTargetOrderByWithRelationInput!], skip: Int, take: Int, where: ConditionalTargetWhereInput): ConditionalTarget
  findFirstContext(cursor: ContextWhereUniqueInput, distinct: [ContextScalarFieldEnum!], orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): Context
  findFirstContextMapping(cursor: ContextMappingWhereUniqueInput, distinct: [ContextMappingScalarFieldEnum!], orderBy: [ContextMappingOrderByWithRelationInput!], skip: Int, take: Int, where: ContextMappingWhereInput): ContextMapping
  findFirstContextMappingOrThrow(cursor: ContextMappingWhereUniqueInput, distinct: [ContextMappingScalarFieldEnum!], orderBy: [ContextMappingOrderByWithRelationInput!], skip: Int, take: Int, where: ContextMappingWhereInput): ContextMapping
  findFirstContextOrThrow(cursor: ContextWhereUniqueInput, distinct: [ContextScalarFieldEnum!], orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): Context
  findFirstUser(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): User
  findFirstUserOrThrow(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): User
  getConditionalTarget(where: ConditionalTargetWhereUniqueInput!): ConditionalTarget
  getContext(where: ContextWhereUniqueInput!): Context
  getContextMapping(where: ContextMappingWhereUniqueInput!): ContextMapping
  getUser(where: UserWhereUniqueInput!): User
  getUserCustom(where: UserWhereUniqueInput!): User!
  groupByConditionalTarget(by: [ConditionalTargetScalarFieldEnum!]!, having: ConditionalTargetScalarWhereWithAggregatesInput, orderBy: [ConditionalTargetOrderByWithAggregationInput!], skip: Int, take: Int, where: ConditionalTargetWhereInput): [ConditionalTargetGroupBy!]!
  groupByContext(by: [ContextScalarFieldEnum!]!, having: ContextScalarWhereWithAggregatesInput, orderBy: [ContextOrderByWithAggregationInput!], skip: Int, take: Int, where: ContextWhereInput): [ContextGroupBy!]!
  groupByContextMapping(by: [ContextMappingScalarFieldEnum!]!, having: ContextMappingScalarWhereWithAggregatesInput, orderBy: [ContextMappingOrderByWithAggregationInput!], skip: Int, take: Int, where: ContextMappingWhereInput): [ContextMappingGroupBy!]!
  groupByUser(by: [UserScalarFieldEnum!]!, having: UserScalarWhereWithAggregatesInput, orderBy: [UserOrderByWithAggregationInput!], skip: Int, take: Int, where: UserWhereInput): [UserGroupBy!]!
  user(where: UserWhereUniqueInput!): User
  users(cursor: UserWhereUniqueInput, distinct: [UserScalarFieldEnum!], orderBy: [UserOrderByWithRelationInput!], skip: Int, take: Int, where: UserWhereInput): [User!]!
}

enum QueryMode {
  default
  insensitive
}

enum RelationshipType {
  CONTAINS
  DEPENDS_ON
  HAS_A
  PARENT_OF
  REFERENCES
  RELATES_TO
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedStringNullableFilter
  _min: NestedStringNullableFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String!]
  startsWith: String
}

type User {
  _count: UserCount
  createdAt: DateTimeISO!
  createdContexts(cursor: ContextWhereUniqueInput, distinct: [ContextScalarFieldEnum!], orderBy: [ContextOrderByWithRelationInput!], skip: Int, take: Int, where: ContextWhereInput): [Context!]!
  email: String!
  id: String!
  isActive: Boolean!
  name: String!
  role: UserRole!
  updatedAt: DateTimeISO!
}

type UserCount {
  createdContexts(where: ContextWhereInput): Int!
}

type UserCountAggregate {
  _all: Int!
  createdAt: Int!
  email: Int!
  id: Int!
  isActive: Int!
  name: Int!
  role: Int!
  updatedAt: Int!
}

input UserCountOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  isActive: SortOrder
  name: SortOrder
  role: SortOrder
  updatedAt: SortOrder
}

input UserCreateInput {
  createdAt: DateTimeISO
  createdContexts: ContextCreateNestedManyWithoutCreatorInput
  email: String!
  id: String
  isActive: Boolean
  name: String!
  role: UserRole
  updatedAt: DateTimeISO
}

input UserCreateManyInput {
  createdAt: DateTimeISO
  email: String!
  id: String
  isActive: Boolean
  name: String!
  role: UserRole
  updatedAt: DateTimeISO
}

input UserCreateNestedOneWithoutCreatedContextsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCreatedContextsInput
  create: UserCreateWithoutCreatedContextsInput
}

input UserCreateOrConnectWithoutCreatedContextsInput {
  create: UserCreateWithoutCreatedContextsInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutCreatedContextsInput {
  createdAt: DateTimeISO
  email: String!
  id: String
  isActive: Boolean
  name: String!
  role: UserRole
  updatedAt: DateTimeISO
}

type UserGroupBy {
  _count: UserCountAggregate
  _max: UserMaxAggregate
  _min: UserMinAggregate
  createdAt: DateTimeISO!
  email: String!
  id: String!
  isActive: Boolean!
  name: String!
  role: UserRole!
  updatedAt: DateTimeISO!
}

type UserMaxAggregate {
  createdAt: DateTimeISO
  email: String
  id: String
  isActive: Boolean
  name: String
  role: UserRole
  updatedAt: DateTimeISO
}

input UserMaxOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  isActive: SortOrder
  name: SortOrder
  role: SortOrder
  updatedAt: SortOrder
}

type UserMinAggregate {
  createdAt: DateTimeISO
  email: String
  id: String
  isActive: Boolean
  name: String
  role: UserRole
  updatedAt: DateTimeISO
}

input UserMinOrderByAggregateInput {
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  isActive: SortOrder
  name: SortOrder
  role: SortOrder
  updatedAt: SortOrder
}

input UserOrderByWithAggregationInput {
  _count: UserCountOrderByAggregateInput
  _max: UserMaxOrderByAggregateInput
  _min: UserMinOrderByAggregateInput
  createdAt: SortOrder
  email: SortOrder
  id: SortOrder
  isActive: SortOrder
  name: SortOrder
  role: SortOrder
  updatedAt: SortOrder
}

input UserOrderByWithRelationInput {
  createdAt: SortOrder
  createdContexts: ContextOrderByRelationAggregateInput
  email: SortOrder
  id: SortOrder
  isActive: SortOrder
  name: SortOrder
  role: SortOrder
  updatedAt: SortOrder
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

enum UserRole {
  ADMIN
  USER
  VIEWER
}

enum UserScalarFieldEnum {
  createdAt
  email
  id
  isActive
  name
  role
  updatedAt
}

input UserScalarWhereWithAggregatesInput {
  AND: [UserScalarWhereWithAggregatesInput!]
  NOT: [UserScalarWhereWithAggregatesInput!]
  OR: [UserScalarWhereWithAggregatesInput!]
  createdAt: DateTimeWithAggregatesFilter
  email: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  isActive: BoolWithAggregatesFilter
  name: StringWithAggregatesFilter
  role: EnumUserRoleWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

input UserUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  createdContexts: ContextUpdateManyWithoutCreatorNestedInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutCreatedContextsNestedInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutCreatedContextsInput
  create: UserCreateWithoutCreatedContextsInput
  update: UserUpdateToOneWithWhereWithoutCreatedContextsInput
  upsert: UserUpsertWithoutCreatedContextsInput
}

input UserUpdateToOneWithWhereWithoutCreatedContextsInput {
  data: UserUpdateWithoutCreatedContextsInput!
  where: UserWhereInput
}

input UserUpdateWithoutCreatedContextsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  isActive: BoolFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpsertWithoutCreatedContextsInput {
  create: UserCreateWithoutCreatedContextsInput!
  update: UserUpdateWithoutCreatedContextsInput!
  where: UserWhereInput
}

input UserWhereInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  createdAt: DateTimeFilter
  createdContexts: ContextListRelationFilter
  email: StringFilter
  id: StringFilter
  isActive: BoolFilter
  name: StringFilter
  role: EnumUserRoleFilter
  updatedAt: DateTimeFilter
}

input UserWhereUniqueInput {
  AND: [UserWhereInput!]
  NOT: [UserWhereInput!]
  OR: [UserWhereInput!]
  createdAt: DateTimeFilter
  createdContexts: ContextListRelationFilter
  email: String
  id: String
  isActive: BoolFilter
  name: StringFilter
  role: EnumUserRoleFilter
  updatedAt: DateTimeFilter
}